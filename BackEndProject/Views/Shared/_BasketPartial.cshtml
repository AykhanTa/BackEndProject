@model IEnumerable<BasketVM>
<div class="minicart-item-wrapper">
    <ul>
        @foreach (var product in Model)
        {
            <li class="minicart-item">
                <div class="minicart-thumb">
                    <a asp-controller="product" asp-action="detail" asp-route-id="@product.Id">
                        <img src="~/assets/img/product/@product.Image" alt="product" />
                    </a>
                </div>
                <div class="minicart-content">
                    <h3 class="product-name">
                        <a asp-controller="product" asp-action="detail" asp-route-id="@product.Id">@product.Name</a>
                    </h3>
                    <p>
                        <span class="cart-quantity">@product.Count <strong>&times;</strong></span>
                        <span class="cart-price">$@String.Format("{0:0.00}", product.Price)</span>
                    </p>
                </div>
                <button class="minicart-remove">
                    <a asp-controller="basket" asp-action="removeProduct" asp-route-id="@product.Id">
                        <i class="ion-android-close"></i>
                    </a>
                </button>
            </li>


        }
    </ul>
</div>

<div class="minicart-pricing-box">
    <ul>
        <li>
            <span>sub-total</span>
            <span><strong>$@(Model.Sum(p => p.Price * p.Count))</strong></span>
        </li>
        <li>
            <span>Eco Tax</span>
            <span><strong>$@(Model.Sum(p => p.ExTax))</strong></span>
        </li>
        <li>
            <span>VAT (20%)</span>
            <span><strong>$@((Model.Sum(p => p.Price * p.Count) * 20 / 100))</strong></span>
        </li>
        <li class="total">
            <span>total</span>
            <span><strong>$@(Model.Sum(p => p.Price * p.Count) + Model.Sum(p => p.ExTax) + Model.Sum(p => p.Price * p.Count) * 20 / 100)</strong></span>
        </li>
    </ul>
</div>